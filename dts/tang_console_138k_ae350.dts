// SPDX-License-Identifier: (GPL-2.0 OR MIT)

/dts-v1/;

#define CPUCLK_FREQ    800000000

/ {
	#address-cells = <1>;
	#size-cells = <1>;
	compatible = "andestech,a25";

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;
		cpu0: cpu@0 {
			device_type = "cpu";
			reg = <0>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv32imafdc";
			riscv,isa-extensions = "i", "m", "a", "f", "d", "c", "zicsr", "zicntr";
			mmu-type = "riscv,sv32";
			clock-frequency = <CPUCLK_FREQ>;
			i-cache-size = <0x8000>;
			i-cache-line-size = <32>;
			i-cache-sets = <256>;
			d-cache-size = <0x8000>;
			d-cache-line-size = <32>;
			d-cache-sets = <256>;
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu1: cpu@1 {
			device_type = "cpu";
			reg = <0>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv32imafdc";
			riscv,isa-extensions = "i", "m", "a", "f", "d", "c", "zicsr", "zicntr";
			mmu-type = "riscv,sv32";
			clock-frequency = <CPUCLK_FREQ>;
			i-cache-size = <0x8000>;
			i-cache-line-size = <32>;
			i-cache-sets = <256>;
			d-cache-size = <0x8000>;
			d-cache-line-size = <32>;
			d-cache-sets = <256>;
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu2: cpu@2 {
			device_type = "cpu";
			reg = <0>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv32imafdc";
			riscv,isa-extensions = "i", "m", "a", "f", "d", "c", "zicsr", "zicntr";
			mmu-type = "riscv,sv32";
			clock-frequency = <CPUCLK_FREQ>;
			i-cache-size = <0x8000>;
			i-cache-line-size = <32>;
			i-cache-sets = <256>;
			d-cache-size = <0x8000>;
			d-cache-line-size = <32>;
			d-cache-sets = <256>;
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu3: cpu@3 {
			device_type = "cpu";
			reg = <0>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv32imafdc";
			riscv,isa-extensions = "i", "m", "a", "f", "d", "c", "zicsr", "zicntr";
			mmu-type = "riscv,sv32";
			clock-frequency = <CPUCLK_FREQ>;
			i-cache-size = <0x8000>;
			i-cache-line-size = <32>;
			i-cache-sets = <256>;
			d-cache-size = <0x8000>;
			d-cache-line-size = <32>;
			d-cache-sets = <256>;
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
	};

	memory@0 {
		device_type = "memory";
		reg = <0x00000000 0x80000000>;
	};

	soc {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "simple-bus";
		ranges;

		plic0: interrupt-controller@e4000000 {
			compatible = "riscv,plic0";
			#interrupt-cells = <2>;
			interrupt-controller;
			reg = <0xe4000000 0x2000000>;
			riscv,ndev=<71>;
			interrupts-extended = <&cpu0_intc 11 &cpu0_intc 9
				&cpu1_intc 11 &cpu1_intc 9
				&cpu2_intc 11 &cpu2_intc 9
				&cpu3_intc 11 &cpu3_intc 9>;
		};

		plicsw: interrupt-controller@e6400000 {
			compatible = "andestech,plicsw";
			#interrupt-cells = <1>;
			interrupt-controller;
			reg = <0xe6400000 0x400000>;
			riscv,ndev=<2>;
			interrupts-extended = <&cpu0_intc 3
				&cpu1_intc 3
				&cpu2_intc 3
				&cpu3_intc 3>;
		};

		plmt0@e6000000 {
			compatible = "andestech,plmt0";
			interrupts-extended = <&cpu0_intc 7
				&cpu1_intc 7
				&cpu2_intc 7
				&cpu3_intc 7>;
			reg = <0xe6000000 0x100000>;
		};
	};


	serial0: serial@f0300000 {
		compatible = "andestech,uart16550", "ns16550a";
		reg = <0xf0300000 0x1000>;
		interrupts = <9 4>;
		clock-frequency = <19660800>;
		reg-shift = <2>;
		reg-offset = <32>;
		no-loopback-test = <1>;
		interrupt-parent = <&plic0>;
	};
};